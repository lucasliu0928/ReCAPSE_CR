length(unique(unique_codes_PerPts_df$ID))
View(unique_codes_PerPts_df)
library(openxlsx)
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
length(unique(unique_codes_PerPts_df$ID))
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
##Get All unique codes for analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_dug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
analysis_code <- all_unique_diag_codes
length(unique(unique_codes_PerPts_df$ID))
total_n_pts <- length(unique(unique_codes_PerPts_df$ID))
i <- 1
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),unique_codes_PerPts_df[,"Unique_Diag"])==T)
length(pts_idxes_hascode)
check <- unique_codes_PerPts_df[pts_idxes_hascode,]
View(check)
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %%==1000){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),unique_codes_PerPts_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- frac_ots_hascodes
}
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),unique_codes_PerPts_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- frac_ots_hascodes
}
i
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
length(SBCE_IDs) + length(SBCE_IDs)
length(SBCE_IDs) + length(noSBCE_IDs)
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
##Get All unique codes for all analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_dug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
analysis_code <- all_unique_diag_codes
analysis_col <- "Unique_Diag"
total_n_pts <- length(unique(unique_codes_PerPts_df$ID))
SBCE_uniqueCodes_df <- which(unique_codes_PerPts_df$ID %in% SBCE_IDs)
noSBCE_uniqueCodes_df <- which(unique_codes_PerPts_df$ID %in% noSBCE_IDs)
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
get_freq_tb <- function(analysis_code, analysis_col,analysis_uniqueCodes_df){
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,analysis_col])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- frac_ots_hascodes
}
return(code_freq_df)
}
library(openxlsx)
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
#########################################################################################################
#Anlysisi ID
#########################################################################################################
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
##Get All unique codes for all analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_dug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
analysis_code <- all_unique_diag_codes
analysis_col <- "Unique_Diag"
SBCE_uniqueCodes_df <- which(unique_codes_PerPts_df$ID %in% SBCE_IDs)
noSBCE_uniqueCodes_df <- which(unique_codes_PerPts_df$ID %in% noSBCE_IDs)
diag_FQ_tb_SBCE <- get_freq_tb(all_unique_diag_codes,"Unique_Diag",SBCE_uniqueCodes_df)
get_freq_tb <- function(analysis_code, analysis_col,analysis_uniqueCodes_df){
total_n_pts <- length(unique(analysis_uniqueCodes_df$ID))
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,analysis_col])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- frac_ots_hascodes
}
return(code_freq_df)
}
diag_FQ_tb_SBCE <- get_freq_tb(all_unique_diag_codes,"Unique_Diag",SBCE_uniqueCodes_df)
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
diag_FQ_tb_SBCE <- get_freq_tb(all_unique_diag_codes,"Unique_Diag",SBCE_uniqueCodes_df)
diag_FQ_tb_SBCE <- get_freq_tb(all_unique_diag_codes[1:100],"Unique_Diag",SBCE_uniqueCodes_df)
View(diag_FQ_tb_SBCE)
View(SBCE_uniqueCodes_df)
2952/3449
View(noSBCE_uniqueCodes_df)
library(openxlsx)
get_freq_tb <- function(analysis_code, analysis_col,analysis_uniqueCodes_df){
total_n_pts <- length(unique(analysis_uniqueCodes_df$ID))
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,analysis_col])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- round(frac_ots_hascodes,2)
}
return(code_freq_df)
}
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/Freq_Table"
# #local
# data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
# outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_Table"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
#########################################################################################################
#Anlysisi ID
#########################################################################################################
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
##Get All unique codes for all analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_drug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
library(openxlsx)
get_freq_tb <- function(analysis_code, analysis_col,analysis_uniqueCodes_df){
total_n_pts <- length(unique(analysis_uniqueCodes_df$ID))
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,analysis_col])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- round(frac_ots_hascodes,2)
}
return(code_freq_df)
}
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/Freq_Table"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_Table"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
#########################################################################################################
#Anlysisi ID
#########################################################################################################
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
diag_FQ_tb_noSBCE <- get_freq_tb(all_unique_diag_codes,"Unique_Diag",noSBCE_uniqueCodes_df)
library(openxlsx)
get_freq_tb <- function(analysis_code, analysis_col,analysis_uniqueCodes_df){
total_n_pts <- length(unique(analysis_uniqueCodes_df$ID))
code_freq_df <- as.data.frame(matrix(NA, nrow = length(analysis_code), ncol = 3))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
for (i in 1:length(analysis_code)){
if(i %% 1000 == 0){print(i)}
curr_code <- analysis_code[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,analysis_col])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df[i,"Code"] <- curr_code
code_freq_df[i,"N_PT_HASCODE"] <- n_pts_hascodes
code_freq_df[i,"FRAC_PT_HASCODE"] <- round(frac_ots_hascodes,2)
}
return(code_freq_df)
}
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/Freq_Table"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_Table"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
#########################################################################################################
#Anlysisi ID
#########################################################################################################
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
##Get All unique codes for all analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_drug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
diag_FQ_tb_noSBCE <- get_freq_tb(all_unique_diag_codes,"Unique_Diag",noSBCE_uniqueCodes_df)
code_freq_df <- rbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,"Unique_Diag"])==T)
library(openxlsx)
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/Freq_noSBCE"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_noSBCE"
#########################################################################################################
#Load unique Codes per patient df
#########################################################################################################
unique_codes_PerPts_df <- read.xlsx(paste0(data_dir,"AllPatient_UniqueCode_inValidMonth.xlsx"),sheet = 1)
exclude_idx <- which(is.na(unique_codes_PerPts_df$Unique_Diag) == T &
is.na(unique_codes_PerPts_df$Unique_Proc) == T &
is.na(unique_codes_PerPts_df$Unique_Drug) == T)
unique_codes_PerPts_df <- unique_codes_PerPts_df[-exclude_idx,]
length(unique(unique_codes_PerPts_df$ID))
#########################################################################################################
#Load pateint event type and date data (Outcome)
#########################################################################################################
All_event_df <- read.csv(paste0(data_dir,"updated_All_event_df.csv"),stringsAsFactors = F)
#1.Get number of IDs in event type files
event_type_IDs <- unique(All_event_df$ID) #40329
#########################################################################################################
#Anlysisi ID
#########################################################################################################
analysis_ID <- unique(intersect(event_type_IDs,unique_codes_PerPts_df$ID))
#########################################################################################################
#updated outcome for analaysis ID
#########################################################################################################
All_event_df <- All_event_df[which(All_event_df$ID %in% analysis_ID),]
SBCE_IDs <- All_event_df[which(All_event_df$SBCE==1),"ID"]
noSBCE_IDs <- All_event_df[which(All_event_df$SBCE==0),"ID"]
#########################################################################################################
##Get All unique codes for all analysis ID
#########################################################################################################
unique_codes_PerPts_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% analysis_ID),]
all_unique_diag_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Diag,split = "$$$$",fixed = T)))
all_unique_proc_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Proc,split = "$$$$",fixed = T)))
all_unique_drug_codes <- unique(unlist(strsplit(unique_codes_PerPts_df$Unique_Drug,split = "$$$$",fixed = T)))
#########################################################################################################
#Count unique code freq (# of patient has the code in valid month)
#########################################################################################################
SBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% SBCE_IDs),]
noSBCE_uniqueCodes_df <- unique_codes_PerPts_df[which(unique_codes_PerPts_df$ID %in% noSBCE_IDs),]
total_n_pts <- length(unique(analysis_uniqueCodes_df$ID))
total_n_pts <- length(unique(noSBCE_uniqueCodes_df$ID))
i < -1
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),analysis_uniqueCodes_df[,"Unique_Diag"])==T)
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Diag"])==T)
all_unique_diag_codes
i <- 1
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df <- rbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
code_freq_df
code_freq_df <- cbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
code_freq_df
outdir
foreach (i = 1: length(all_unique_diag_codes)) %dopar% {
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df <- cbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
write.xlsx(code_freq_df,paste0(outdir,"CODE",curr_code,"diag_noSBCE.xlsx"))
}
outdir
outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_noSBCE/"
foreach (i = 1: length(all_unique_diag_codes)) %dopar% {
curr_code <- all_unique_diag_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Diag"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df <- cbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
write.xlsx(code_freq_df,paste0(outdir,"CODE",curr_code,"diag_noSBCE.xlsx"))
}
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/8_HPC_CountCodeFreqs_noSBCE.R', echo=TRUE)
write.xlsx(code_freq_df,paste0(outdir,"diag/","CODE",curr_code,"_diag_noSBCE.xlsx"))
write.xlsx(code_freq_df,paste0(outdir,"diag/","CODE",curr_code,"_diag_noSBCE.xlsx"))
outdir
data_dir <- "/recapse/intermediate_data/"
outdir <- "/recapse/intermediate_data/Freq_noSBCE/"
#local
data_dir <- "/Users/lucasliu/Desktop/intermediate_data/"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/Freq_noSBCE/"
write.xlsx(code_freq_df,paste0(outdir,"diag/","CODE",curr_code,"_diag_noSBCE.xlsx"))
# Proc
foreach (i = 1: length(all_unique_proc_codes)) %dopar% {
curr_code <- all_unique_proc_codes[i]
pts_idxes_hascode <-  which(grepl(paste0("\\b",curr_code,"\\b"),noSBCE_uniqueCodes_df[,"Unique_Proc"])==T)
n_pts_hascodes <- length(pts_idxes_hascode)
frac_ots_hascodes <- n_pts_hascodes/total_n_pts
code_freq_df <- cbind.data.frame(curr_code,n_pts_hascodes,round(frac_ots_hascodes,2))
colnames(code_freq_df) <- c("Code","N_PT_HASCODE","FRAC_PT_HASCODE")
write.xlsx(code_freq_df,paste0(outdir,"proc/","CODE",curr_code,"_diag_noSBCE.xlsx"))
}
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/8_HPC_CountCodeFreqs_SBCE.R', echo=TRUE)
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/8_HPC_CountCodeFreqs_SBCE.R', echo=TRUE)
sbce_files <- list.files(data_dir1,full.names = T)
library(openxlsx)
data_dir1 <- "/recapse/intermediate_data/Freq_SBCE/"
data_dir2 <- "/recapse/intermediate_data/Freq_noSBCE/"
outdir <- "/recapse/intermediate_data/"
#local
data_dir1 <- "/Users/lucasliu/Desktop/intermediate_data/Freq_SBCE"
data_dir2 <- "/Users/lucasliu/Desktop/intermediate_data/Freq_noSBCE"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/"
sbce_files <- list.files(data_dir1,full.names = T)
sbce_freq_tb <- do.call(rbind,lapply(sbce_files, read.xlsx))
sbce_files <- list.files(data_dir1,full.names = T)
sbce_freq_tb <- do.call(rbind,lapply(sbce_files, read.xlsx))
#local
data_dir1 <- "/Users/lucasliu/Desktop/intermediate_data/Freq_SBCE/diag"
#local
data_dir1 <- "/Users/lucasliu/Desktop/intermediate_data/Freq_SBCE/diag"
data_dir2 <- "/Users/lucasliu/Desktop/intermediate_data/Freq_noSBCE/diag"
outdir <- "/Users/lucasliu/Desktop/intermediate_data/"
sbce_files <- list.files(data_dir1,full.names = T)
sbce_freq_tb <- do.call(rbind,lapply(sbce_files, read.xlsx))
sbce_files <- list.files(data_dir1,full.names = T)[1:100]
sbce_freq_tb <- do.call(rbind,lapply(sbce_files, read.xlsx))
View(unique_codes_PerPts_df)
View(sbce_freq_tb)
nosbce_files <- list.files(data_dir2,full.names = T)[1:100]
nosbce_freq_tb <- do.call(rbind,lapply(nosbce_files, read.xlsx))
