analysis_duration = "onRRT"
outcome_col = "sample_death_in24h"
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/Intermediate_Data/"
indir1 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/sample_level_data/')
indir2 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/patient_level_data/')
outdir <- paste0(indir2 ,"Clustered_Subpopulation/")
#####################################################################################
#Load testing IDs
#####################################################################################
test_IDs_df <-  read.csv(paste0(indir1, "Test_SampleIDs.csv"),stringsAsFactors = F)
test_spIDs  <-  test_IDs_df[,'SAMPLE_ID']
test_ptIDs <- NA
for (i in 1:length(test_spIDs)){
test_ptIDs[i] <- unlist(strsplit(test_spIDs[i],"_"))[1]
}
test_ptIDs_unique <- unique(test_ptIDs)
#####################################################################################
#Load Patient level demo info
#####################################################################################
demo_df <- read.csv(paste0(indir2 , "demo_finalID_onRRT.csv"),stringsAsFactors = F)
#recode
f_idxes <- which(demo_df[,"GENDR_CD_DES"] == 0)
demo_df[f_idxes,"GENDR_CD_DES"] <- "Female"
m_idxes <- which(demo_df[,"GENDR_CD_DES"] == 1)
demo_df[m_idxes,"GENDR_CD_DES"] <- "Male"
w_idxes <- which(demo_df[,"RACE_CD_DES"] == 0)
demo_df[w_idxes,"RACE_CD_DES"] <- "White"
b_idxes <- which(demo_df[,"RACE_CD_DES"] == 1)
demo_df[b_idxes,"RACE_CD_DES"] <- "BLACK/AFR AMERI"
o_idxes <- which(demo_df[,"RACE_CD_DES"] == 2)
demo_df[o_idxes,"RACE_CD_DES"] <- "Others"
test_demo_df  <- demo_df[which(demo_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Load Patient level outcome (hospital death) info
#####################################################################################
outcome_df <- read.csv(paste0(indir2 , "outcome_finalID_onRRT.csv"),stringsAsFactors = F)
test_outcome_df  <- outcome_df[which(outcome_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Preprocess
#####################################################################################
seleted_features <-  c("AGE","GENDR_CD_DES","RACE_CD_DES","WT_KG","BMI","CHARLSON_INDEX")
in_data <- test_demo_df[,seleted_features]
rownames(in_data) <- test_demo_df$ENCNTR_ID
#Mean imputation
for (j in 1:ncol(in_data)){
na_idxes <- which(is.na(in_data[,j]) == T)
if (length(na_idxes) >0 ){
in_data[na_idxes,j] <- mean(in_data[,j],na.rm = T)
}
}
in_data
#Min-max norm
in_data_norm <- in_data
for (j in 1:ncol(in_data_norm)){
in_data_norm[,j] <- min_max_norm(in_data_norm[,j])
}
#####################################################################################
#Cluster subpupolations
#####################################################################################
#Optimal Cluster
fviz_nbclust(in_data_norm, FUN = hcut, method = "wss")
View(in_data_norm)
#Run Hierarchical clustering using Complete Linkage
n_grps <- 6
d <- dist(in_data_norm, method = "euclidean") #distance
hc1 <- hclust(d, method = "complete" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# Cut tree into n_grps groups
sub_grp <- cutree(hc1, k = n_grps)
sub_grp_df <- as.data.frame(sub_grp)
#Scater plot on two dimension
fviz_cluster(list(data = in_data_norm, cluster = sub_grp))
library(factoextra)
min_max_norm <- function(x){
norm_x <- (x-min(x,na.rm = T))/(max(x,na.rm = T)-min(x,na.rm = T))
return(norm_x)
}
#####################################################################################
#Dir
#####################################################################################
analysis_duration = "onRRT"
outcome_col = "sample_death_in24h"
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/Intermediate_Data/"
indir1 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/sample_level_data/')
indir2 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/patient_level_data/')
outdir <- paste0(indir2 ,"Clustered_Subpopulation/")
#####################################################################################
#Load testing IDs
#####################################################################################
test_IDs_df <-  read.csv(paste0(indir1, "Test_SampleIDs.csv"),stringsAsFactors = F)
test_spIDs  <-  test_IDs_df[,'SAMPLE_ID']
test_ptIDs <- NA
for (i in 1:length(test_spIDs)){
test_ptIDs[i] <- unlist(strsplit(test_spIDs[i],"_"))[1]
}
test_ptIDs_unique <- unique(test_ptIDs)
#####################################################################################
#Load Patient level demo info
#####################################################################################
demo_df <- read.csv(paste0(indir2 , "demo_finalID_onRRT.csv"),stringsAsFactors = F)
test_demo_df  <- demo_df[which(demo_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Load Patient level outcome (hospital death) info
#####################################################################################
outcome_df <- read.csv(paste0(indir2 , "outcome_finalID_onRRT.csv"),stringsAsFactors = F)
test_outcome_df  <- outcome_df[which(outcome_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Preprocess
#####################################################################################
seleted_features <-  c("AGE","GENDR_CD_DES","RACE_CD_DES","WT_KG","BMI","CHARLSON_INDEX")
in_data <- test_demo_df[,seleted_features]
rownames(in_data) <- test_demo_df$ENCNTR_ID
#Mean imputation
for (j in 1:ncol(in_data)){
na_idxes <- which(is.na(in_data[,j]) == T)
if (length(na_idxes) >0 ){
in_data[na_idxes,j] <- mean(in_data[,j],na.rm = T)
}
}
#Min-max norm
in_data_norm <- in_data
for (j in 1:ncol(in_data_norm)){
in_data_norm[,j] <- min_max_norm(in_data_norm[,j])
}
#####################################################################################
#Cluster subpupolations
#####################################################################################
#Optimal Cluster
fviz_nbclust(in_data_norm, FUN = hcut, method = "wss")
#Run Hierarchical clustering using Complete Linkage
n_grps <- 6
d <- dist(in_data_norm, method = "euclidean") #distance
hc1 <- hclust(d, method = "complete" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# Cut tree into n_grps groups
sub_grp <- cutree(hc1, k = n_grps)
sub_grp_df <- as.data.frame(sub_grp)
#Scater plot on two dimension
fviz_cluster(list(data = in_data_norm, cluster = sub_grp))
#####################################################################################
#Add clustering label to the demo df
#####################################################################################
in_data$Cluster <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- sub_grp_df[which(rownames(sub_grp_df) == curr_id),"sub_grp"]
in_data[i,"Cluster"] <- curr_label
}
#####################################################################################
#Add outcome (hospital death) label to the demo df
#####################################################################################
in_data$Hospital_Death <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- test_outcome_df[which(test_outcome_df$ENCNTR_ID == curr_id),"Hospital_Death"]
in_data[i,"Hospital_Death"] <- curr_label
}
write.csv(in_data,paste0(outdir,"Clustered_TestPts_df.csv"))
#####################################################################################
#Plot
#####################################################################################
#factorize
in_data$GENDR_CD_DES <- as.factor(in_data$GENDR_CD_DES)
in_data$RACE_CD_DES <- as.factor(in_data$RACE_CD_DES)
in_data$Cluster <- as.factor(in_data$Cluster)
in_data$Hospital_Death <- as.factor(in_data$Hospital_Death)
#recode
f_idxes <- which(in_data[,"GENDR_CD_DES"] == 0)
in_data[f_idxes,"GENDR_CD_DES"] <- "Female"
m_idxes <- which(in_data[,"GENDR_CD_DES"] == 1)
in_data[m_idxes,"GENDR_CD_DES"] <- "Male"
w_idxes <- which(in_data[,"RACE_CD_DES"] == 0)
in_data[w_idxes,"RACE_CD_DES"] <- "White"
b_idxes <- which(in_data[,"RACE_CD_DES"] == 1)
in_data[b_idxes,"RACE_CD_DES"] <- "BLACK/AFR AMERI"
o_idxes <- which(in_data[,"RACE_CD_DES"] == 2)
in_data[o_idxes,"RACE_CD_DES"] <- "Others"
#####################################################################################
#Cluster subpupolations
#####################################################################################
#Optimal Cluster
fviz_nbclust(in_data_norm, FUN = hcut, method = "wss")
library(factoextra)
min_max_norm <- function(x){
norm_x <- (x-min(x,na.rm = T))/(max(x,na.rm = T)-min(x,na.rm = T))
return(norm_x)
}
#####################################################################################
#Dir
#####################################################################################
analysis_duration = "onRRT"
outcome_col = "sample_death_in24h"
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/Intermediate_Data/"
indir1 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/sample_level_data/')
indir2 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/patient_level_data/')
outdir <- paste0(indir2 ,"Clustered_Subpopulation/")
#####################################################################################
#Load testing IDs
#####################################################################################
test_IDs_df <-  read.csv(paste0(indir1, "Test_SampleIDs.csv"),stringsAsFactors = F)
test_spIDs  <-  test_IDs_df[,'SAMPLE_ID']
test_ptIDs <- NA
for (i in 1:length(test_spIDs)){
test_ptIDs[i] <- unlist(strsplit(test_spIDs[i],"_"))[1]
}
test_ptIDs_unique <- unique(test_ptIDs)
#####################################################################################
#Load Patient level demo info
#####################################################################################
demo_df <- read.csv(paste0(indir2 , "demo_finalID_onRRT.csv"),stringsAsFactors = F)
test_demo_df  <- demo_df[which(demo_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Load Patient level outcome (hospital death) info
#####################################################################################
outcome_df <- read.csv(paste0(indir2 , "outcome_finalID_onRRT.csv"),stringsAsFactors = F)
test_outcome_df  <- outcome_df[which(outcome_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Preprocess
#####################################################################################
seleted_features <-  c("AGE","GENDR_CD_DES","RACE_CD_DES","WT_KG","BMI","CHARLSON_INDEX")
in_data <- test_demo_df[,seleted_features]
rownames(in_data) <- test_demo_df$ENCNTR_ID
#Mean imputation
for (j in 1:ncol(in_data)){
na_idxes <- which(is.na(in_data[,j]) == T)
if (length(na_idxes) >0 ){
in_data[na_idxes,j] <- mean(in_data[,j],na.rm = T)
}
}
#Min-max norm
in_data_norm <- in_data
for (j in 1:ncol(in_data_norm)){
in_data_norm[,j] <- min_max_norm(in_data_norm[,j])
}
#####################################################################################
#Cluster subpupolations
#####################################################################################
#Optimal Cluster
fviz_nbclust(in_data_norm, FUN = hcut, method = "wss")
#Run Hierarchical clustering using Complete Linkage
n_grps <- 6
d <- dist(in_data_norm, method = "euclidean") #distance
hc1 <- hclust(d, method = "complete" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# Cut tree into n_grps groups
sub_grp <- cutree(hc1, k = n_grps)
sub_grp_df <- as.data.frame(sub_grp)
#Scater plot on two dimension
fviz_cluster(list(data = in_data_norm, cluster = sub_grp))
#####################################################################################
#Add clustering label to the demo df
#####################################################################################
in_data$Cluster <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- sub_grp_df[which(rownames(sub_grp_df) == curr_id),"sub_grp"]
in_data[i,"Cluster"] <- curr_label
}
#####################################################################################
#Add outcome (hospital death) label to the demo df
#####################################################################################
in_data$Hospital_Death <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- test_outcome_df[which(test_outcome_df$ENCNTR_ID == curr_id),"Hospital_Death"]
in_data[i,"Hospital_Death"] <- curr_label
}
write.csv(in_data,paste0(outdir,"Clustered_TestPts_df.csv"))
#####################################################################################
#Plot
#####################################################################################
#factorize
in_data$GENDR_CD_DES <- as.factor(in_data$GENDR_CD_DES)
in_data$RACE_CD_DES <- as.factor(in_data$RACE_CD_DES)
in_data$Cluster <- as.factor(in_data$Cluster)
in_data$Hospital_Death <- as.factor(in_data$Hospital_Death)
#recode
f_idxes <- which(in_data[,"GENDR_CD_DES"] == 0)
in_data[f_idxes,"GENDR_CD_DES"] <- "Female"
in_data[,"GENDR_CD_DES"]
library(factoextra)
min_max_norm <- function(x){
norm_x <- (x-min(x,na.rm = T))/(max(x,na.rm = T)-min(x,na.rm = T))
return(norm_x)
}
#####################################################################################
#Dir
#####################################################################################
analysis_duration = "onRRT"
outcome_col = "sample_death_in24h"
proj_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/Intermediate_Data/"
indir1 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/sample_level_data/')
indir2 <- paste0(proj_dir , '/practice_data_092721/', analysis_duration , '_analysis/patient_level_data/')
outdir <- paste0(indir2 ,"Clustered_Subpopulation/")
#####################################################################################
#Load testing IDs
#####################################################################################
test_IDs_df <-  read.csv(paste0(indir1, "Test_SampleIDs.csv"),stringsAsFactors = F)
test_spIDs  <-  test_IDs_df[,'SAMPLE_ID']
test_ptIDs <- NA
for (i in 1:length(test_spIDs)){
test_ptIDs[i] <- unlist(strsplit(test_spIDs[i],"_"))[1]
}
test_ptIDs_unique <- unique(test_ptIDs)
#####################################################################################
#Load Patient level demo info
#####################################################################################
demo_df <- read.csv(paste0(indir2 , "demo_finalID_onRRT.csv"),stringsAsFactors = F)
test_demo_df  <- demo_df[which(demo_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Load Patient level outcome (hospital death) info
#####################################################################################
outcome_df <- read.csv(paste0(indir2 , "outcome_finalID_onRRT.csv"),stringsAsFactors = F)
test_outcome_df  <- outcome_df[which(outcome_df$ENCNTR_ID %in% test_ptIDs_unique),]
#####################################################################################
#Preprocess
#####################################################################################
seleted_features <-  c("AGE","GENDR_CD_DES","RACE_CD_DES","WT_KG","BMI","CHARLSON_INDEX")
in_data <- test_demo_df[,seleted_features]
rownames(in_data) <- test_demo_df$ENCNTR_ID
#Mean imputation
for (j in 1:ncol(in_data)){
na_idxes <- which(is.na(in_data[,j]) == T)
if (length(na_idxes) >0 ){
in_data[na_idxes,j] <- mean(in_data[,j],na.rm = T)
}
}
#Min-max norm
in_data_norm <- in_data
for (j in 1:ncol(in_data_norm)){
in_data_norm[,j] <- min_max_norm(in_data_norm[,j])
}
#####################################################################################
#Cluster subpupolations
#####################################################################################
#Optimal Cluster
fviz_nbclust(in_data_norm, FUN = hcut, method = "wss")
#Run Hierarchical clustering using Complete Linkage
n_grps <- 6
d <- dist(in_data_norm, method = "euclidean") #distance
hc1 <- hclust(d, method = "complete" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# Cut tree into n_grps groups
sub_grp <- cutree(hc1, k = n_grps)
sub_grp_df <- as.data.frame(sub_grp)
#Scater plot on two dimension
fviz_cluster(list(data = in_data_norm, cluster = sub_grp))
#####################################################################################
#Add clustering label to the demo df
#####################################################################################
in_data$Cluster <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- sub_grp_df[which(rownames(sub_grp_df) == curr_id),"sub_grp"]
in_data[i,"Cluster"] <- curr_label
}
#####################################################################################
#Add outcome (hospital death) label to the demo df
#####################################################################################
in_data$Hospital_Death <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- test_outcome_df[which(test_outcome_df$ENCNTR_ID == curr_id),"Hospital_Death"]
in_data[i,"Hospital_Death"] <- curr_label
}
write.csv(in_data,paste0(outdir,"Clustered_TestPts_df.csv"))
#####################################################################################
#Plot
#####################################################################################
#recode
f_idxes <- which(in_data[,"GENDR_CD_DES"] == 0)
in_data[f_idxes,"GENDR_CD_DES"] <- "Female"
m_idxes <- which(in_data[,"GENDR_CD_DES"] == 1)
in_data[m_idxes,"GENDR_CD_DES"] <- "Male"
w_idxes <- which(in_data[,"RACE_CD_DES"] == 0)
in_data[w_idxes,"RACE_CD_DES"] <- "White"
b_idxes <- which(in_data[,"RACE_CD_DES"] == 1)
in_data[b_idxes,"RACE_CD_DES"] <- "BLACK/AFR AMERI"
o_idxes <- which(in_data[,"RACE_CD_DES"] == 2)
in_data[o_idxes,"RACE_CD_DES"] <- "Others"
#factorize
in_data$GENDR_CD_DES <- as.factor(in_data$GENDR_CD_DES)
in_data$RACE_CD_DES <- as.factor(in_data$RACE_CD_DES)
in_data$Cluster <- as.factor(in_data$Cluster)
in_data$Hospital_Death <- as.factor(in_data$Hospital_Death)
#histogram for conti features
cont_features <-  c("AGE","WT_KG","BMI","CHARLSON_INDEX")
for (i in 1:length(cont_features)){
curr_f <- cont_features[i]
p <- ggplot(in_data, aes_string(x = curr_f, fill = "Cluster")) +
geom_histogram(colour = "black") +
facet_grid(Cluster ~ ., scales = "free") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"))
png(paste0(outdir,"distribution_plot/",curr_f,".png"),width = 1500,height = 2000,res = 300)
print(p)
dev.off()
}
#Bar chart for categorical features and patienet outcome label
cate_features <- c("GENDR_CD_DES","RACE_CD_DES","Hospital_Death")
for (i in 1:length(cate_features)){
curr_f <- cate_features[i]
p <- ggplot(in_data, aes_string(x = curr_f,fill = "Cluster")) +
geom_bar(colour = "black",width = 0.1) +
facet_grid(Cluster ~ ., scales = "free")
png(paste0(outdir,"distribution_plot/",curr_f,".png"),width = 1500,height = 2000,res = 300)
print(p)
dev.off()
}
rect.hclust(hc1, k = n_grps, border = 2:5)
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
hc1
plot(in_data_norm[,1:2], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,1:4], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(1,2)], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(1,3)], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(1,4)], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(1,5)], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(1,6)], pch=20, col=cutree(hc1,3))
plot(in_data_norm[,c(4,5)], pch=20, col=cutree(hc1,3))
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1,ylab = "")
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1,xlab = "")
rect.hclust(hc1, k = n_grps, border = 2:5)
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
hc1 <- hclust(d, method = "centroid" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
hc1 <- hclust(d, method = "ward.d" )
hc1 <- hclust(d, method = "ward.D2" )
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
# Cut tree into n_grps groups
sub_grp <- cutree(hc1, k = n_grps)
sub_grp_df <- as.data.frame(sub_grp)
#Scater plot on two dimension
fviz_cluster(list(data = in_data_norm, cluster = sub_grp))
#####################################################################################
#Add clustering label to the demo df
#####################################################################################
in_data$Cluster <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- sub_grp_df[which(rownames(sub_grp_df) == curr_id),"sub_grp"]
in_data[i,"Cluster"] <- curr_label
}
#####################################################################################
#Add outcome (hospital death) label to the demo df
#####################################################################################
in_data$Hospital_Death <- NA
for (i in 1:nrow(in_data)){
curr_id <- rownames(in_data)[i]
curr_label <- test_outcome_df[which(test_outcome_df$ENCNTR_ID == curr_id),"Hospital_Death"]
in_data[i,"Hospital_Death"] <- curr_label
}
write.csv(in_data,paste0(outdir,"Clustered_TestPts_df.csv"))
#####################################################################################
#Plot
#####################################################################################
#recode
f_idxes <- which(in_data[,"GENDR_CD_DES"] == 0)
in_data[f_idxes,"GENDR_CD_DES"] <- "Female"
m_idxes <- which(in_data[,"GENDR_CD_DES"] == 1)
in_data[m_idxes,"GENDR_CD_DES"] <- "Male"
w_idxes <- which(in_data[,"RACE_CD_DES"] == 0)
in_data[w_idxes,"RACE_CD_DES"] <- "White"
b_idxes <- which(in_data[,"RACE_CD_DES"] == 1)
b_idxes <- which(in_data[,"RACE_CD_DES"] == 1)
in_data[b_idxes,"RACE_CD_DES"] <- "BLACK/AFR AMERI"
o_idxes <- which(in_data[,"RACE_CD_DES"] == 2)
in_data[o_idxes,"RACE_CD_DES"] <- "Others"
#factorize
in_data$GENDR_CD_DES <- as.factor(in_data$GENDR_CD_DES)
in_data$RACE_CD_DES <- as.factor(in_data$RACE_CD_DES)
in_data$Cluster <- as.factor(in_data$Cluster)
in_data$Hospital_Death <- as.factor(in_data$Hospital_Death)
#histogram for conti features
cont_features <-  c("AGE","WT_KG","BMI","CHARLSON_INDEX")
for (i in 1:length(cont_features)){
curr_f <- cont_features[i]
p <- ggplot(in_data, aes_string(x = curr_f, fill = "Cluster")) +
geom_histogram(colour = "black") +
facet_grid(Cluster ~ ., scales = "free") +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15,face="bold"))
png(paste0(outdir,"distribution_plot/",curr_f,".png"),width = 1500,height = 2000,res = 300)
print(p)
dev.off()
}
hc1 <- hclust(d, method = "complete" )
source('~/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/KG_TimeAware_LSTM/Preprocessing/7_Define_Subpopulation.R', echo=TRUE)
# #Plot the obtained dendrogram
plot(hc1, cex = 0.6,hang = -1)
rect.hclust(hc1, k = n_grps, border = 2:5)
source('~/Desktop/DrChen_Projects/All_AKI_Projects/AKID_Project2/KG_TimeAware_LSTM/Preprocessing/7_Define_Subpopulation.R', echo=TRUE)
setwd("~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC")
