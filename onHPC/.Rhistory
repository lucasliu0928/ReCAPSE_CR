################################################################################
#Data dir
################################################################################
#onHPC
proj_dir  <- "/recapse/intermediate_data/"
#local
proj_dir  <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/"
#data dir
data_dir1        <- paste0(proj_dir, "16_Performance_WithSurgPrimSite_V1_1111updated/")
data_dir2        <- paste0(proj_dir, "0_Codes/Grouped_CleanUniqueCodes/")
#Downsampled index
ds_index <- 1
################################################################################
#Load important features for each DS
################################################################################
important_f_df <- read.csv(paste0(data_dir1,"All_DS_Performance/train_DS",ds_index,"/BeforeSmoothed/16_importance_matrix_DS", ds_index ,"_posweight0.5.csv"), stringsAsFactors = F)
important_f_df <- important_f_df[order(important_f_df[,"Gain"],decreasing = T),]
#Add CCS type and code
res <- extract_ccs_typeAndcode(important_f_df[,"Feature"])
important_f_df$CCS_Type <- res[[1]]
important_f_df$CCS_Code <- res[[2]]
################################################################################
#Load CCS cateogry names
################################################################################
diag_grp <- read.xlsx(paste0(data_dir2,"Unique_Diag_And_Groups_inALLClaims.xlsx"), sheet = 1)
drug_grp <- read.xlsx(paste0(data_dir2,"Unique_Drug_And_Groups_inALLClaims.xlsx"), sheet = 1)
proc_grp <- read.xlsx(paste0(data_dir2,"Unique_Proc_And_Groups_inALLClaims.xlsx"), sheet = 1)
################################################################################
#Load CCS cateogry names
################################################################################
Diag_grp <- read.xlsx(paste0(data_dir2,"Unique_Diag_And_Groups_inALLClaims.xlsx"), sheet = 1)
Proc_grp <- read.xlsx(paste0(data_dir2,"Unique_Proc_And_Groups_inALLClaims.xlsx"), sheet = 1)
#Add CCS description
important_f_df$CCS_descrption <- NA
i <- 1
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
curr_ccs_code
#Add CCS type and code
res <- extract_ccs_typeAndcode(important_f_df[,"Feature"])
extract_ccs_typeAndcode <- function(feature_list){
#feature_list <- important_f_df[,"Feature"]
feature_list <- gsub("time_since_|time_until_|cumul_ratio_","",feature_list)
ccs_type <- NA
ccs_code <- NA
for (i in 1:length(feature_list)){
curr_f <- feature_list[i]
if (grepl("CCS_",curr_f)==T){ #if CCS feature
curr_f_splited <- strsplit(curr_f,split = "_")
ccs_type[i] <- unlist(curr_f_splited)[[2]]
ccs_code[i] <- unlist(curr_f_splited)[[3]]
}else{
ccs_type[i] <- NA
ccs_code[i] <- NA
}
}
return(list(ccs_type,ccs_code))
}
#Add CCS type and code
res <- extract_ccs_typeAndcode(important_f_df[,"Feature"])
important_f_df$CCS_Type <- res[[1]]
important_f_df$CCS_Code <- res[[2]]
i <- 1
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
curr_discrip
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
i
curr_discrip
curr_ccs_code
curr_ccs_type
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
if (is.na(curr_ccs_type) == F){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}
if (is.na(curr_ccs_type) == F){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
curr_discrip
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
curr_discrip
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
curr_ccs_code
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F | curr_ccs_type == "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
curr_ccs_type
is.na(curr_ccs_type) == F
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_type == "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
i <- 1
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
curr_ccs_code
curr_ccs_type
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
curr_discrip
i <- 1
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_type == "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
curr_discrip
i <- 1
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_type != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
curr_discrip
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_type != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
i
curr_ccs_code
curr_ccs_type
if (is.na(curr_ccs_type) == F & curr_ccs_type != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
curr_discrip
curr_ccs_type != "NA"
curr_ccs_type
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
warnings()
curr_discrip
warn(options2)
warning(options2)
options(warn=2)
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip
}
i
curr_ccs_code
curr_ccs_type
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
curr_discrip
nchar(curr_discrip)
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip[1]
}
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip[1] #if multiple has the same nchar, use the first one
}
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- trimws(curr_discrip[1]) #if multiple has the same nchar, use the first one
}
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- trimws(curr_discrip[1], which = c("both")) #if multiple has the same nchar, use the first one
}
i <- 6
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
trimws(curr_discrip[1], which = c("both"))
gsub(curr_discrip)
gsub("\\'",curr_discrip)
gsub("\\'","",curr_discrip)
trimws(gsub("\\'","",curr_discrip))
#This func used in 18_CheckPTSFeatureTrajectory.R and 20_Importance Plot.R
find_ccs_discrption_func <-function(grp_df,curr_code){
grp_idxes <- which(grp_df[,"CCS_CATEGORY"] == curr_code)
unique_discrptions <- unique(grp_df[grp_idxes,"CCS_CATEGORY_DESCRIPTION"])
n_char_discrip <- nchar(unique_discrptions)
final_discrip <- unique_discrptions[which(n_char_discrip == max(n_char_discrip))]
final_discrip <- gsub('[[:punct:] ]+',' ',final_discrip)
final_discrip <- trimws(final_discrip) #trim white space and '
return(final_discrip)
}
#Add CCS description
important_f_df$CCS_descrption <- NA
for(i in 1:nrow(important_f_df)){
curr_ccs_code <- important_f_df[i,"CCS_Code"]
curr_ccs_type <- important_f_df[i,"CCS_Type"]
if (is.na(curr_ccs_type) == F & curr_ccs_code != "NA"){
if (curr_ccs_type == "DIAG"){
curr_discrip <- find_ccs_discrption_func(Diag_grp,curr_ccs_code)
}else if(curr_ccs_type == "PROC"){
curr_discrip <- find_ccs_discrption_func(Proc_grp,curr_ccs_code)
}else{
curr_discrip <- NA
}
}else{
curr_discrip <- NA
}
important_f_df$CCS_descrption[i] <- curr_discrip[1] #if multiple has the same nchar, use the first one
}
################################################################################
#Plot importance
################################################################################
plot <- important_f_df[1:15,]
################################################################################
#Plot importance
################################################################################
plot_df <- important_f_df[1:15,]
################################################################################
#Plot importance
################################################################################
plot_df <- important_f_df[1:15,]
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "darkblue",color = "darkblue",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank())
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue4",color = "steelblue4",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank())
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue3",color = "steelblue3",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank())
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue3",color = "steelblue3",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(size = 10))
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue3",color = "steelblue3",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank(),
axis.title.x = element_text(size = 20))
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue3",color = "steelblue3",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank(),
axis.text  = element_text(size = 20))
p
p <-ggplot(plot_df,aes(x = factor(Feature, levels = rev(Feature)), y = Gain, width = 0.5)) +
geom_bar(fill = "steelblue3",color = "steelblue3",stat = "identity", position = "identity") +
coord_flip() +
xlab("Features") +
ggtitle("Feature importance") +
theme(plot.title = element_text(lineheight = .9, face = "bold"),
panel.grid.major.y = element_blank(),
axis.text  = element_text(size = 20),
axis.title  = element_text(size = 22))
p
proj_dir
outfile <- paste0(proj_dir, "16_Performance_WithSurgPrimSite_V1_1111updated/train_DS",ds_index,"/BeforeSmoothed/","important_features_top15.png")
outfile <- paste0(proj_dir, "16_Performance_WithSurgPrimSite_V1_1111updated/train_DS",ds_index,"/BeforeSmoothed/","important_features_top15.png")
png(outfile, width = 500,height = 1000, res = 200)
print(p)
dev.off()
outfile <- paste0(data_dir1, "All_DS_Performance/train_DS",ds_index,"/BeforeSmoothed/","important_features_top15.png")
png(outfile, width = 500,height = 1000, res = 200)
print(p)
dev.off()
png(outfile, width = 500,height = 1000, res = 100)
print(p)
dev.off()
png(outfile, width = 1000,height = 1000, res = 100)
print(p)
dev.off()
View(important_f_df)
