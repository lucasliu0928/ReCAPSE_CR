if (curr_type == "PROC_ICD9or10"){ #if ICD
curr_ccs_idxes <- which(CCS_ICD_df[,"Code"] == curr_code)
if (length(curr_ccs_idxes) > 0){
curr_category <- CCS_ICD_df[curr_ccs_idxes,"CCS.CATEGORY"]
curr_discrpt  <- CCS_ICD_df[curr_ccs_idxes,"CCS.CATEGORY.DESCRIPTION"]
}else{
curr_category <- NA
curr_discrpt <- NA
}
}else if (curr_type == "PROC_HCPCS"){ #if HCPCS
curr_ccs_idxes <- which(CCS_HCPCS_df[,"Code_Range_Low"] <= curr_code & CCS_HCPCS_df[,"Code_Range_High"] >= curr_code)
if (length(curr_ccs_idxes) > 0){
curr_category <- CCS_HCPCS_df[curr_ccs_idxes,"CCS.CATEGORY"]
curr_discrpt  <- CCS_HCPCS_df[curr_ccs_idxes,"CCS.CATEGORY.DESCRIPTION"]
}else{
curr_category <- NA
curr_discrpt <- NA
}
}
claim_code_df[i,"CCS_CATEGORY"] <- curr_category
claim_code_df[i,"CCS_CATEGORY_DESCRIPTION"] <- curr_discrpt
}
return(claim_code_df)
}
#2. procedure codes
grouped_unique_proc_df <- group_codes_into_CCS_func(unique_proc_df,CCS_Proc_df,CCS_SProc_df) #add CCS
View(grouped_unique_proc_df)
length(which(is.na(grouped_unique_proc_df$CCS_CATEGORY)==T))
length(which(is.na(grouped_unique_proc_df$CCS_CATEGORY)==F))
grouped_unique_proc_df <- group_codes_into_Chuback_func(grouped_unique_proc_df,Chuback_Proc_df)  #add chuback
grouped_unique_proc_df <- group_codes_into_Ritzwoller_func(grouped_unique_proc_df,Ritzwoller_Proc_df)#add ritzwoller
write.csv(grouped_unique_proc_df,paste0(outdir,"Unique_Proc_And_Groups_inALLClaims.csv"),row.names = F)
#3. DM3 drug codes
grouped_unique_drug_df <- group_drugcodes_into_DM3_func(unique_drug_df,DM3_df)
write.csv(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.csv"),row.names = F)
View(CCS_SProc_df)
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/0C_Code_Grouping.R', echo=TRUE)
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
#2.Load CCS servis procedure group file
CCS_SProc_df <- load_and_clean_CSS_ServicesP_data(grping_data_dir)
#3. Load Chuback Groups file:
Chuback_df <- load_and_clean_Chuback_data(grping_data_dir)
Chuback_Diag_df <- Chuback_df[which(Chuback_df$Code.type %in% c("ICD-9 diagnosis")),]
Chuback_Proc_df <- Chuback_df[which(Chuback_df$Code.type %in% c("HCPC","ICD-9 procedure","CPT", "CPT category II","CPT category III")),]
#4. load Ritzwoller file:
Ritzwoller_df <- load_and_clean_Ritzwoller_data(grping_data_dir)
Ritzwoller_Diag_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Diagnostic"),] #48
Ritzwoller_Proc_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Procedure"),] #1008
#5.Load drug group
DM3_df <- load_and_clean_DM3_data(grping_data_dir)
View(DM3_df)
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
View(unique_drug_df)
unique_drug_df$DRUG_NAME
group_drugcodes_into_DM3_func <- function(claim_code_df,DM3_df){
claim_code_df$specific_group <- NA
claim_code_df$general_group <- NA
for (i in 1:nrow(claim_code_df)){
if (i %% 1000 == 0){print(i)}
curr_code <- claim_code_df[i,"DRUG_NAME"]
curr_idxes <- which(DM3_df[,"desc"] == curr_code)
if (length(curr_idxes) > 0){
claim_code_df[i,"specific_group"] <-  unique(DM3_df[curr_idxes,"specific_group"])
claim_code_df[i,"general_group"]  <-  unique(DM3_df[curr_idxes,"general_group"])
}
}
return(claim_code_df)
}
#3. DM3 drug codes
grouped_unique_drug_df <- group_drugcodes_into_DM3_func(unique_drug_df,DM3_df)
View(grouped_unique_drug_df)
write.csv(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.csv"),row.names = F)
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
#2.Load CCS servis procedure group file
CCS_SProc_df <- load_and_clean_CSS_ServicesP_data(grping_data_dir)
#3. Load Chuback Groups file:
Chuback_df <- load_and_clean_Chuback_data(grping_data_dir)
Chuback_Diag_df <- Chuback_df[which(Chuback_df$Code.type %in% c("ICD-9 diagnosis")),]
Chuback_Proc_df <- Chuback_df[which(Chuback_df$Code.type %in% c("HCPC","ICD-9 procedure","CPT", "CPT category II","CPT category III")),]
#4. load Ritzwoller file:
Ritzwoller_df <- load_and_clean_Ritzwoller_data(grping_data_dir)
Ritzwoller_Diag_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Diagnostic"),] #48
Ritzwoller_Proc_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Procedure"),] #1008
#5.Load drug group
DM3_df <- load_and_clean_DM3_data(grping_data_dir)
################################################################################
#2. Load unique codes data
################################################################################
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
#3. DM3 drug codes
grouped_unique_drug_df <- group_drugcodes_into_DM3_func(unique_drug_df,DM3_df)
write.xlsx(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.csv"))
write.xlsx(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.xlsx"))
typeof(grouped_unique_drug_df$CODE)
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/0C_Code_Grouping.R', echo=TRUE)
CCS_Diag_df$CODE_TYPE
table(CCS_Diag_df$CODE_TYPE)
group_codes_into_CCS_func <- function(claim_code_df,CCS_ICD_df,CCS_HCPCS_df){
claim_code_df$CCS_CATEGORY <- NA
claim_code_df$CCS_CATEGORY_DESCRIPTION <- NA
for (i in 1:nrow(claim_code_df)){
if (i %% 1000 == 0){print(i)}
curr_code <- claim_code_df[i,"CODE"]
curr_type <-  claim_code_df[i,"TYPE"]
if (grepl("ICD",curr_type,ignore.case = T) == T){ #if ICD proc or ICD diag
curr_ccs_idxes <- which(CCS_ICD_df[,"Code"] == curr_code)
if (length(curr_ccs_idxes) > 0){
curr_category <- CCS_ICD_df[curr_ccs_idxes,"CCS.CATEGORY"]
curr_discrpt  <- CCS_ICD_df[curr_ccs_idxes,"CCS.CATEGORY.DESCRIPTION"]
}else{
curr_category <- NA
curr_discrpt <- NA
}
}else if (curr_type == "PROC_HCPCS"){ #if HCPCS
curr_ccs_idxes <- which(CCS_HCPCS_df[,"Code_Range_Low"] <= curr_code & CCS_HCPCS_df[,"Code_Range_High"] >= curr_code)
if (length(curr_ccs_idxes) > 0){
curr_category <- CCS_HCPCS_df[curr_ccs_idxes,"CCS.CATEGORY"]
curr_discrpt  <- CCS_HCPCS_df[curr_ccs_idxes,"CCS.CATEGORY.DESCRIPTION"]
}else{
curr_category <- NA
curr_discrpt <- NA
}
}
claim_code_df[i,"CCS_CATEGORY"] <- curr_category
claim_code_df[i,"CCS_CATEGORY_DESCRIPTION"] <- curr_discrpt
}
return(claim_code_df)
}
################################################################################
#3. Code grouping
################################################################################
#1. diagnose codes
grouped_unique_diag_df <- group_codes_into_CCS_func(unique_diag_df,CCS_Diag_df) #add CCS
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
#2.Load CCS servis procedure group file
CCS_SProc_df <- load_and_clean_CSS_ServicesP_data(grping_data_dir)
#3. Load Chuback Groups file:
Chuback_df <- load_and_clean_Chuback_data(grping_data_dir)
Chuback_Diag_df <- Chuback_df[which(Chuback_df$Code.type %in% c("ICD-9 diagnosis")),]
Chuback_Proc_df <- Chuback_df[which(Chuback_df$Code.type %in% c("HCPC","ICD-9 procedure","CPT", "CPT category II","CPT category III")),]
#4. load Ritzwoller file:
Ritzwoller_df <- load_and_clean_Ritzwoller_data(grping_data_dir)
Ritzwoller_Diag_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Diagnostic"),] #48
Ritzwoller_Proc_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Procedure"),] #1008
#5.Load drug group
DM3_df <- load_and_clean_DM3_data(grping_data_dir)
################################################################################
#2. Load unique codes data
################################################################################
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
################################################################################
#3. Code grouping
################################################################################
#1. diagnose codes
grouped_unique_diag_df <- group_codes_into_CCS_func(unique_diag_df,CCS_Diag_df,NULL) #add CCS
grouped_unique_diag_df <- group_codes_into_Chuback_func(grouped_unique_diag_df,Chuback_Diag_df) #add chuback
grouped_unique_diag_df <- group_codes_into_Ritzwoller_func(grouped_unique_diag_df,Ritzwoller_Diag_df) #add ritzwoller
write.xlsx(grouped_unique_diag_df,paste0(outdir,"Unique_Diag_And_Groups_inALLClaims.csv"))
#2. procedure codes
grouped_unique_proc_df <- group_codes_into_CCS_func(unique_proc_df,CCS_Proc_df,CCS_SProc_df) #add CCS
grouped_unique_proc_df <- group_codes_into_Chuback_func(grouped_unique_proc_df,Chuback_Proc_df)  #add chuback
grouped_unique_proc_df <- group_codes_into_Ritzwoller_func(grouped_unique_proc_df,Ritzwoller_Proc_df)#add ritzwoller
write.xlsx(grouped_unique_proc_df,paste0(outdir,"Unique_Proc_And_Groups_inALLClaims.csv"))
#3. DM3 drug codes
grouped_unique_drug_df <- group_drugcodes_into_DM3_func(unique_drug_df,DM3_df)
write.xlsx(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.xlsx"))
source('~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC/0C_Code_Grouping.R', echo=TRUE)
write.xlsx(grouped_unique_diag_df,paste0(outdir,"Unique_Diag_And_Groups_inALLClaims.xlsx"))
write.xlsx(grouped_unique_proc_df,paste0(outdir,"Unique_Proc_And_Groups_inALLClaims.xlsx"))
################################################################################
#4. Report stats for CCS grouping
################################################################################
aval_code_grps_df <- grouped_unique_diag_df[which(is.na(grouped_unique_diag_df$CCS_CATEGORY)==F),]
View(aval_code_grps_df)
table(aval_code_grps_df$CCS_CATEGORY)
length(unique(aval_code_grps_df$CCS_CATEGORY))
nrow(aval_code_grps_df)
nrow(grouped_unique_diag_df)
grp_name <- "CCS_CATEGORY"
#Get number of codes have groups
which(is.na(in_data[,grp_name])==F)
in_data <- grouped_unique_diag_df
grp_name <- "CCS_CATEGORY"
#Get number of codes have groups
which(is.na(in_data[,grp_name])==F)
#Get number of codes have groups
length(which(is.na(in_data[,grp_name])==F))
#Get number of codes have groups
n_codes_hasgrps <- length(which(is.na(in_data[,grp_name])==F))
in_data <- grouped_unique_diag_df
grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
n_codes_hasgrps <- length(which(is.na(in_data[,grp_name])==F))
n_codes
n_codes_hasgrps
unique(in_data[,grp_name])
unique(in_data[which(is.na(in_data[,grp_name])==F),grp_name])
length(unique(in_data[which(is.na(in_data[,grp_name])==F),grp_name]))
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
as.data.frame(c(n_codes,n_codes_hasgrps,n_grps))
cbind.data.frame(c(n_codes,n_codes_hasgrps,n_grps))
cbind.data.frame(n_codes,n_codes_hasgrps,n_grps)
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_grps)
################################################################################
#4. Report stats for CCS grouping
################################################################################
report_code_grps_func <- function(in_data, grp_name){
# in_data <- grouped_unique_diag_df
# grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
n_codes_hasgrps <- length(has_grp_indexes)
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_grps)
return(grp_stats)
}
colnames(grouped_unique_diag_df)
report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/AfterClean_UniqueCodes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
#2.Load CCS servis procedure group file
CCS_SProc_df <- load_and_clean_CSS_ServicesP_data(grping_data_dir)
#3. Load Chuback Groups file:
Chuback_df <- load_and_clean_Chubak_data(grping_data_dir)
Chuback_Diag_df <- Chuback_df[which(Chuback_df$Code.type %in% c("ICD-9 diagnosis")),]
Chuback_Proc_df <- Chuback_df[which(Chuback_df$Code.type %in% c("HCPC","ICD-9 procedure","CPT", "CPT category II","CPT category III")),]
#4. load Ritzwoller file:
Ritzwoller_df <- load_and_clean_Ritzwoller_data(grping_data_dir)
Ritzwoller_Diag_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Diagnostic"),] #48
Ritzwoller_Proc_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Procedure"),] #1008
#5.Load drug group
DM3_df <- load_and_clean_DM3_data(grping_data_dir)
################################################################################
#2. Load unique codes data
################################################################################
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
################################################################################
#3. Code grouping
################################################################################
#1. diagnose codes
grouped_unique_diag_df <- group_codes_into_CCS_func(unique_diag_df,CCS_Diag_df,NULL) #add CCS
grouped_unique_diag_df <- group_codes_into_chubak_func(grouped_unique_diag_df,Chuback_Diag_df) #add chuback
grouped_unique_diag_df <- group_codes_into_Ritzwoller_func(grouped_unique_diag_df,Ritzwoller_Diag_df) #add ritzwoller
write.xlsx(grouped_unique_diag_df,paste0(outdir,"Unique_Diag_And_Groups_inALLClaims.xlsx"))
#2. procedure codes
grouped_unique_proc_df <- group_codes_into_CCS_func(unique_proc_df,CCS_Proc_df,CCS_SProc_df) #add CCS
grouped_unique_proc_df <- group_codes_into_chubak_func(grouped_unique_proc_df,Chuback_Proc_df)  #add chuback
grouped_unique_proc_df <- group_codes_into_Ritzwoller_func(grouped_unique_proc_df,Ritzwoller_Proc_df)#add ritzwoller
write.xlsx(grouped_unique_proc_df,paste0(outdir,"Unique_Proc_And_Groups_inALLClaims.xlsx"))
#3. DM3 drug codes
grouped_unique_drug_df <- group_drugcodes_into_DM3_func(unique_drug_df,DM3_df)
write.xlsx(grouped_unique_drug_df,paste0(outdir,"Unique_Drug_And_Groups_inALLClaims.xlsx"))
################################################################################
#4. Report stats for  grouping
################################################################################
report_code_grps_func <- function(in_data, grp_name){
# in_data <- grouped_unique_diag_df
# grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
n_codes_hasgrps <- length(has_grp_indexes)
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_grps)
return(grp_stats)
}
#Diag
CCS_stats <- report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Category")
Diag_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
View(Diag_stats)
which(grouped_unique_diag_df$CCS_CATEGORY=="")
#Proc
CCS_stats <- report_code_grps_func(grouped_unique_proc_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Category")
Proc_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
View(Proc_stats)
length(unique(grouped_unique_proc_df$CLAIM))
length(unique(grouped_unique_proc_df$CCS_CATEGORY))
which(grouped_unique_proc_df$CCS_CATEGORY == "")
which(is.na(grouped_unique_proc_df$CCS_CATEGORY) == T)
rownames(Diag_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
rownames(Proc_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
################################################################################
#4. Report stats for  grouping
################################################################################
report_code_grps_func <- function(in_data, grp_name){
# in_data <- grouped_unique_diag_df
# grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
n_codes_hasgrps <- length(has_grp_indexes)
#Number of codes have no groups
n_codes_NOgrps <-  n_codes - n_codes_hasgrps
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_grps)
return(grp_stats)
}
################################################################################
#4. Report stats for  grouping
################################################################################
report_code_grps_func <- function(in_data, grp_name){
# in_data <- grouped_unique_diag_df
# grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
n_codes_hasgrps <- length(has_grp_indexes)
#Number of codes have no groups
n_codes_NOgrps <-  n_codes - n_codes_hasgrps
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_codes_NOgrps,n_grps)
return(grp_stats)
}
#Diag
CCS_stats <- report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Type")
#Diag
CCS_stats <- report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Category")
Diag_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Diag_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
#Proc
CCS_stats <- report_code_grps_func(grouped_unique_proc_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Category")
Proc_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Proc_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
#Drug
colnames(grouped_unique_drug_df)
#Drug
DM3_stats1 <- report_code_grps_func(grouped_unique_drug_df,"specific_group")
DM3_stats2 <- report_code_grps_func(grouped_unique_drug_df,"general_group")
Drug_stats <- rbind(DM3_stats1,DM3_stats2)
rownames(Drug_stats) <- c("DM3_specific","DM3_general")
View(Drug_stats)
#All stats
rbind(Diag_stats,Proc_stats,Drug_stats)
#All stats
all_stats <- rbind(Diag_stats,Proc_stats,Drug_stats)
View(all_stats)
report_code_grps_func <- function(in_data, grp_name){
# in_data <- grouped_unique_diag_df
# grp_name <- "CCS_CATEGORY"
#Get total number of unique codes
n_codes <- nrow(in_data)
#Get number of codes have groups
has_grp_indexes <- which(is.na(in_data[,grp_name])==F)
n_codes_hasgrps <- length(has_grp_indexes)
#Number of codes have no groups
n_codes_NOgrps <-  n_codes - n_codes_hasgrps
#Number of groups
n_grps <-  length(unique(in_data[has_grp_indexes,grp_name]))
grp_stats <- cbind.data.frame(n_codes,n_codes_hasgrps,n_codes_NOgrps,n_grps)
return(grp_stats)
}
#Diag
CCS_stats <- report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Category")
Diag_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Diag_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
rownames(Diag_stats) <- paste0("DIAG",rownames(Diag_stats))
#Proc
CCS_stats <- report_code_grps_func(grouped_unique_proc_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Category")
Proc_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Proc_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
rownames(Proc_stats) <- paste0("PROC",rownames(Proc_stats))
#Drug
DM3_stats1 <- report_code_grps_func(grouped_unique_drug_df,"specific_group")
DM3_stats2 <- report_code_grps_func(grouped_unique_drug_df,"general_group")
Drug_stats <- rbind(DM3_stats1,DM3_stats2)
rownames(Drug_stats) <- c("DM3_specific","DM3_general")
#All stats
all_stats <- rbind(Diag_stats,Proc_stats,Drug_stats)
#Diag
CCS_stats <- report_code_grps_func(grouped_unique_diag_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_diag_df,"Ritzwoller_Category")
Diag_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Diag_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
rownames(Diag_stats) <- paste0("DIAG_",rownames(Diag_stats))
#Proc
CCS_stats <- report_code_grps_func(grouped_unique_proc_df,"CCS_CATEGORY")
Chubak_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Type")
Chubak_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Chubak_Category")
Ritzwoller_Type_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Type")
Ritzwoller_Category_stats <- report_code_grps_func(grouped_unique_proc_df,"Ritzwoller_Category")
Proc_stats <- rbind(CCS_stats,Chubak_Type_stats,Chubak_Category_stats,Ritzwoller_Type_stats,Ritzwoller_Category_stats)
rownames(Proc_stats) <- c("CCS","Chubak_Type","Chubak_Category","Ritzwoller_Type","Ritzwoller_Category")
rownames(Proc_stats) <- paste0("PROC_",rownames(Proc_stats))
#Drug
DM3_stats1 <- report_code_grps_func(grouped_unique_drug_df,"specific_group")
DM3_stats2 <- report_code_grps_func(grouped_unique_drug_df,"general_group")
Drug_stats <- rbind(DM3_stats1,DM3_stats2)
rownames(Drug_stats) <- c("DM3_specific","DM3_general")
#All stats
all_stats <- rbind(Diag_stats,Proc_stats,Drug_stats)
write.xlsx(all_stats,paste0(outdir,"Codes_Stats_inALLClaims.xlsx"))
write.csv(all_stats,paste0(outdir,"Codes_Stats_inALLClaims.csv"))
#All stats
all_stats <- rbind(Diag_stats,Proc_stats,Drug_stats)
write.csv(all_stats,paste0(outdir,"Codes_Stats_inALLClaims.csv"))
