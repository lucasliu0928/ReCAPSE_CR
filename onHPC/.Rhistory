codes_df     <-  data.frame(unique(code_data[which(is.na(code_data)==F & code_data != "", arr.ind = T)]))
colnames(codes_df) <- "CODE"
codes_df$TYPE <- code_type
return(codes_df)
}
library(data.table)
raw_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/Testing data for UH3 - Dec 16 2020/"
#######################################################################
############################## Medicaid  ##############################
#######################################################################
#Codes columns
diag_cols <- c("CDE_DIAG_PRIM","CDE_DIAG_2","CDE_DIAG_3","CDE_DIAG_4") #ICD 9 or ICD10
proc_cols <- c("CDE_PROC_PRIM")                   #HCPCS
drug_cols <- c("CDE_THERA_CLS_AHFS","CDE_NDC")
data_df <- fread(paste0(raw_data_dir,"kcr_medicaid_healthclaims_fb0015.csv"))
ICD_Proc_Codes <- get_code_of_onetype(data_df,"PROC_ICD9or10",proc_cols)
get_code_of_onetype <- function(in_data,code_type, code_col){
# in_data  <- data_df
# code_col <- diag_cols
# code_type <- "PROC_ICD9or10"
code_data <-  in_data[,code_col]
codes_df     <-  data.frame(unique(code_data[which(is.na(code_data)==F & code_data != "", arr.ind = T)]))
colnames(codes_df) <- "CODE"
codes_df$TYPE <- code_type
return(codes_df)
}
library(data.table)
raw_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/Testing data for UH3 - Dec 16 2020/"
#######################################################################
############################## Medicaid  ##############################
#######################################################################
#Codes columns
diag_cols <- c("CDE_DIAG_PRIM","CDE_DIAG_2","CDE_DIAG_3","CDE_DIAG_4") #ICD 9 or ICD10
proc_cols <- c("CDE_PROC_PRIM")                   #HCPCS
drug_cols <- c("CDE_THERA_CLS_AHFS","CDE_NDC")
data_df <- fread(paste0(raw_data_dir,"kcr_medicaid_healthclaims_fb0015.csv"))
data_df$study_id
ICD_Proc_Codes <- get_code_of_onetype(data_df,"PROC_ICD9or10",proc_cols)
data_df <- data.frame(fread(paste0(raw_data_dir,"kcr_medicaid_healthclaims_fb0015.csv")))
ICD_Proc_Codes <- get_code_of_onetype(data_df,"PROC_ICD9or10",proc_cols)
View(ICD_Proc_Codes)
diag_cols <- paste0("DGNS_CD",seq(1,25))            #ICD9 or ICD10
ICD_prcedure_cols <- paste0("PRCDRCD", seq(1,25,1)) #ICD9 or ICD10
HCPCS_procedure_cols <- "HCPCS_CD"                   #HCPCS
drug_cols <- c("NDC_CD","PROD_SRVC_ID")
data_df <- data.frame(fread(paste0(raw_data_dir,"kcr_medicare_claims_fb0015.csv")))
setwd("~/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Code/onHPC")
#######################################################################
##############              Data dir                     ##############
#######################################################################
data_dir <- "/recapse/intermediate_data/0_Codes/Unique_Drug_PtsLevelCount/"
outdir   <- "/recapse/intermediate_data/0_Codes/Count/"
#local
data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Unique_Drug_PtsLevelCount/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Count/"
unique_codes_files <- list.files(data_dir)
unique_codes_files
#Proc
proc_files <- list.files(paste0(data_dir,"Unique_Proc_PtsLevelCount"))
proc_files
#######################################################################
##############              Data dir                     ##############
#######################################################################
data_dir <- "/recapse/intermediate_data/0_Codes/Count/"
outdir   <- "/recapse/intermediate_data/0_Codes/Count/"
#local
data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Count/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Count/"
#Proc
proc_files <- list.files(paste0(data_dir,"Unique_Proc_PtsLevelCount"))
proc_files
proc_ct_df <- do.call(rbind,lapply(paste0(data_dir,proc_files), read.xlsx))
library(openxlsx)
#Proc
proc_files <- list.files(paste0(data_dir,"Unique_Proc_PtsLevelCount"))
proc_ct_df <- do.call(rbind,lapply(paste0(data_dir,proc_files), read.xlsx))
#Proc
proc_files <- list.files(paste0(data_dir,"Unique_Proc_PtsLevelCount/"))
proc_files
#Proc
proc_files <- list.files(paste0(data_dir,"Unique_Proc_PtsLevelCount/"),full.names = T)
proc_ct_df <- do.call(rbind,lapply(proc_files, read.xlsx))
proc_ct_df <- do.call(rbind,lapply(proc_files[1:100], read.xlsx))
View(proc_ct_df)
#Diagnoise
diag_files <- list.files(paste0(data_dir,"Unique_Diag_PtsLevelCount/"),full.names = T)
diag_ct_df <- do.call(rbind,lapply(diag_files[1:100], read.xlsx))
#Diagnoise
diag_files <- list.files(paste0(data_dir,"Unique_Diag_PtsLevelCount/"),full.names = T)
drug_ct_df <- do.call(rbind,lapply(drug_files[1:100], read.xlsx))
#Drug
drug_files <- list.files(paste0(data_dir,"Unique_Drug_PtsLevelCount/"),full.names = T)
drug_ct_df <- do.call(rbind,lapply(drug_files[1:100], read.xlsx))
View(drug_ct_df)
source("Recapse_Ultility.R")
################################################################################
#Set up parallel computing envir
################################################################################
numCores <- detectCores()  # get the number of cores available
print(numCores)
registerDoParallel(numCores)  # use multicore, set to the number of our cores
count_code_freq_patient_level <- function(unique_code_df,perPts_unique_codes_df,code_col,outdir,out_subdir){
unique_codes <- unique_code_df[,"CODE"]
total_pts <- nrow(perPts_unique_codes_df)
SBCE_pts_indexes <- which(perPts_unique_codes_df$SBCE==1)
nonSBCE_pts_indexes <- which(perPts_unique_codes_df$SBCE==0)
code_ct_df <- as.data.frame(matrix(NA, nrow = 1, ncol = ncol(unique_code_df)))
colnames(code_ct_df) <- colnames(unique_code_df)
code_ct_df$N_PTs_HASCODE <- NA
code_ct_df$Frac_PTS_HASCODE <- NA
code_ct_df$N_SBCE_PTS_HASCODE <- NA
code_ct_df$Frac_SBCE_PTS_HASCODE <- NA
code_ct_df$N_nonSBCE_PTS_HASCODE <- NA
code_ct_df$Frac_nonSBCE_PTS_HASCODE <- NA
foreach (i = 1: length(unique_codes)) %dopar% {
curr_code <- as.character(unique_codes[i])
search_string <- paste0("\\b",curr_code,"\\b")
code_ct_df[1,1:ncol(unique_code_df)] <- unique_code_df[i,]
code_ct_df$CODE <- as.character(code_ct_df$CODE)
#all pts
code_ct_df[1,"N_PTs_HASCODE"]    <- length(which(grepl(search_string,perPts_unique_codes_df[,code_col])==T))
code_ct_df[1,"Frac_PTS_HASCODE"] <- code_ct_df[1,"N_PTs_HASCODE"] /total_pts
#SBCE pts
code_ct_df[1,"N_SBCE_PTS_HASCODE"]    <- length(which(grepl(search_string,perPts_unique_codes_df[SBCE_pts_indexes,code_col])==T))
code_ct_df[1,"Frac_SBCE_PTS_HASCODE"] <-  code_ct_df[1,"N_SBCE_PTS_HASCODE"]/length(SBCE_pts_indexes)
#non_SBCE pts
code_ct_df[1,"N_nonSBCE_PTS_HASCODE"]    <- length(which(grepl(search_string,perPts_unique_codes_df[nonSBCE_pts_indexes,code_col])==T))
code_ct_df[1,"Frac_nonSBCE_PTS_HASCODE"] <- code_ct_df[1,"N_nonSBCE_PTS_HASCODE"] /length(nonSBCE_pts_indexes)
write.xlsx(code_ct_df,paste0(outdir,out_subdir, curr_code,".xlsx"))
}
}
#######################################################################
##############              Data dir                     ##############
#######################################################################
SBCE_dir <- "/recapse/intermediate_data/"
data_dir <- "/recapse/intermediate_data/0_Codes/perPatient_UniqueCodes/"
code_data_dir <- "/recapse/intermediate_data/0_Codes/"
outdir   <- "/recapse/intermediate_data/0_Codes/Count/"
#local
SBCE_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/"
data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/perPatient_UniqueCodes/"
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Count/"
################################################################################
#2.Get unique code df per pts and combine
################################################################################
unique_codes_files <- list.files(data_dir)
perPts_unique_c
perPts_unique_codes_df <- do.call(rbind,lapply(paste0(data_dir,unique_codes_files), read.xlsx))
################################################################################
#3.Get SBCE or not SBCE label
################################################################################
SBCE_df <- read.xlsx(paste0(SBCE_dir,"4_updated_All_event_df.xlsx"),sheet = 1)
################################################################################
#4.Analysis ID
################################################################################
analysis_id <- intersect(SBCE_df$study_id,perPts_unique_codes_df$study_id)
################################################################################
#5. update data for anlaysis ID
################################################################################
SBCE_df <- SBCE_df[which(SBCE_df$study_id %in% analysis_id),]
perPts_unique_codes_df <- perPts_unique_codes_df[which(perPts_unique_codes_df$study_id %in% analysis_id),]
################################################################################
#6. add SBCE label
################################################################################
perPts_unique_codes_df$SBCE <- SBCE_df[match(SBCE_df[,"study_id"],perPts_unique_codes_df[,"study_id"]),"SBCE"]
################################################################################
#3.Get unique code and groups from entire data set
################################################################################
unique_diag_df <- read.csv(paste0(code_data_dir,"Unique_Diag_And_Groups_allpts.csv"),stringsAsFactors = F)
View(unique_diag_df)
unique_proc_df <- read.csv(paste0(code_data_dir,"Unique_Proc_And_Groups_allpts.csv"),stringsAsFactors = F)
unique_drug_df <- read.csv(paste0(code_data_dir,"Unique_Drug_And_Groups_allpts.csv"),stringsAsFactors = F)
################################################################################
#Count pts who has code for all pts, SBCE pts, and non-SBCE pts
################################################################################
count_code_freq_patient_level(unique_proc_df,perPts_unique_codes_df,"Proc_Codes",outdir,"Unique_Proc_PtsLevelCount2/")
################################################################################
#Count pts who has code for all pts, SBCE pts, and non-SBCE pts
################################################################################
count_code_freq_patient_level(unique_proc_df,perPts_unique_codes_df,"Proc_Codes",outdir,"Unique_Proc_PtsLevelCount2/")
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
data_dir <- "/recapse/data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
#######################################################################
############################## Medicaid  ##############################
#######################################################################
#Data
data_df1 <- data.frame(fread(paste0(data_dir,"kcr_medicaid_healthclaims_fb0015.csv")))
data_df2 <- data.frame(fread(paste0(data_dir,"KCR_MEDICAID_PHARMCLAIMS_FB0015.csv")))
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/"
data_dir <- "/recapse/data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
#######################################################################
#1.Unique codes
#######################################################################
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
unique_proc_df$CODE
View(unique_proc_df)
which(data_df1[,c(HCPCS_proc_cols,)] == unique_proc_df$CODE[1])
#Codes columns
ICD_diag_cols   <- c("CDE_DIAG_PRIM","CDE_DIAG_2","CDE_DIAG_3","CDE_DIAG_4") #ICD 9 or ICD10
HCPCS_proc_cols <- c("CDE_PROC_PRIM")                                        #HCPCS
AHFS_drug_cols  <- c("CDE_THERA_CLS_AHFS")
NDC_drug_cols   <- c("CDE_NDC")
which(data_df1[,c(HCPCS_proc_cols,)] == unique_proc_df$CODE[1])
unique_proc_df$CODE[1]
which(data_df1[,c(HCPCS_proc_cols)] == unique_proc_df$CODE[1])
data_hasCode <- data_df1[which(data_df1[,c(HCPCS_proc_cols)] == unique_proc_df$CODE[1]),]
View(data_hasCode)
unique_proc_df$CODE[1]
View(data_df1)
data_hasCode <- data_df1[which(data_df1[,c(HCPCS_proc_cols)] == "00179"),]
View(data_hasCode)
################################################################################
#Set up parallel computing envir
################################################################################
numCores <- detectCores()-2  # get the number of cores available
print(numCores)
################################################################################
#Set up parallel computing envir
################################################################################
numCores <- detectCores()-4 # get the number of cores available
print(numCores)
registerDoParallel(numCores)  # use multicore, set to the number of our cores
unique_code_df <- unique_proc_df
unique_codes <- unique_code_df[,"CODE"]
################################################################################
#3.Get SBCE or not SBCE label
################################################################################
SBCE_df <- read.xlsx(paste0(SBCE_dir,"4_updated_All_event_df.xlsx"),sheet = 1)
#local
SBCE_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/"
################################################################################
#3.Get SBCE or not SBCE label
################################################################################
SBCE_df <- read.xlsx(paste0(SBCE_dir,"4_updated_All_event_df.xlsx"),sheet = 1)
all_proc_df <- data_df1[,c(HCPCS_proc_cols)]
View(SBCE_df)
#######################################################################
############################## Medicare  ##############################
#######################################################################
#Data
data_df2 <- data.frame(fread(paste0(data_dir,"kcr_medicare_claims_fb0015.csv"), nrows = 100))
View(data_df2)
all_proc_df2 <- data_df2[,c(HCPCS_proc_cols,ICD_procedure_cols)]
#Code cols
ICD_diag_cols <- paste0("DGNS_CD",seq(1,25))             #ICD9 or ICD10
HCPCS_proc_cols     <- "HCPCS_CD"                        #HCPCS
ICD_procedure_cols <- paste0("PRCDRCD", seq(1,25,1))     #ICD9 or ICD10
NDC_drug_cols <- c("NDC_CD","PROD_SRVC_ID")              #NDC
all_proc_df2 <- data_df2[,c(HCPCS_proc_cols,ICD_procedure_cols)]
View(all_proc_df2)
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
data_df1 <- data.frame(fread(paste0(data_dir,"kcr_medicaid_healthclaims_fb0015.csv")))
data_df2 <- data.frame(fread(paste0(data_dir,"KCR_MEDICAID_PHARMCLAIMS_FB0015.csv")))
#Codes columns
ICD_diag_cols   <- c("CDE_DIAG_PRIM","CDE_DIAG_2","CDE_DIAG_3","CDE_DIAG_4") #ICD 9 or ICD10
HCPCS_proc_cols <- c("CDE_PROC_PRIM")                                        #HCPCS
AHFS_drug_cols  <- c("CDE_THERA_CLS_AHFS")
NDC_drug_cols   <- c("CDE_NDC")
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
#Code cols
ICD_diag_cols <- paste0("DGNS_CD",seq(1,25))             #ICD9 or ICD10
HCPCS_proc_cols     <- "HCPCS_CD"                        #HCPCS
ICD_procedure_cols <- paste0("PRCDRCD", seq(1,25,1))     #ICD9 or ICD10
NDC_drug_cols <- c("NDC_CD","PROD_SRVC_ID")              #NDC
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
#Code cols
ICD_diag_cols <- paste0("DGNS_CD",seq(1,25))             #ICD9 or ICD10
HCPCS_proc_cols     <- "HCPCS_CD"                        #HCPCS
ICD_procedure_cols <- paste0("PRCDRCD", seq(1,25,1))     #ICD9 or ICD10
NDC_drug_cols <- c("NDC_CD","PROD_SRVC_ID")              #NDC
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
ICD_procedure_cols
HCPCS_proc_cols
HCPCS_proc_cols
all_proc_df2 <- data_df2[,c("study_id")]
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols)]
#######################################################################
############################## Medicare  ##############################
#######################################################################
#Data
data_df2 <- data.frame(fread(paste0(data_dir,"kcr_medicare_claims_fb0015.csv"), nrows = 100))
#Code cols
ICD_diag_cols <- paste0("DGNS_CD",seq(1,25))             #ICD9 or ICD10
HCPCS_proc_cols     <- "HCPCS_CD"                        #HCPCS
ICD_procedure_cols <- paste0("PRCDRCD", seq(1,25,1))     #ICD9 or ICD10
NDC_drug_cols <- c("NDC_CD","PROD_SRVC_ID")              #NDC
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols)]
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
View(all_proc_df2)
View(all_proc_df1)
ICD_procedure_cols
#Procesdure
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
#Codes columns
ICD_diag_cols   <- c("CDE_DIAG_PRIM","CDE_DIAG_2","CDE_DIAG_3","CDE_DIAG_4") #ICD 9 or ICD10
HCPCS_proc_cols <- c("CDE_PROC_PRIM")                                        #HCPCS
AHFS_drug_cols  <- c("CDE_THERA_CLS_AHFS")
NDC_drug_cols   <- c("CDE_NDC")
#Procesdure
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
all_proc_df1$HCPCS_CD <- NA    #add a column so medcaid and medicare are consisdent
#Code cols
ICD_diag_cols2 <- paste0("DGNS_CD",seq(1,25))             #ICD9 or ICD10
HCPCS_proc_cols2     <- "HCPCS_CD"                        #HCPCS
ICD_procedure_cols2 <- paste0("PRCDRCD", seq(1,25,1))     #ICD9 or ICD10
NDC_drug_cols2 <- c("NDC_CD","PROD_SRVC_ID")              #NDC
#######################################################################
#Procesdure
#######################################################################
#Medicaid
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
#######################################################################
#Procesdure
#######################################################################
#Medicaid
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
all_proc_df1[,HCPCS_proc_cols2] <- NA                  #add a column so medcaid and medicare are consisdent
all_proc_df1[,ICD_procedure_cols2] <- NA     #add a column so medcaid and medicare are consisdent
#######################################################################
#Procesdure
#######################################################################
#Medicaid
all_proc_df1 <- data_df1[,c("study_id",HCPCS_proc_cols)]
all_proc_df1[,c(HCPCS_proc_cols2, ICD_procedure_cols2)] <- NA           #add a column so medcaid and medicare are consisdent
#Medicare
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
all_proc_df2[,HCPCS_proc_cols] <- NA  #add a column so medcaid and medicare are consisdent
#Medicare
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols,ICD_procedure_cols)]
#Medicare
all_proc_df2 <- data_df2[,c("study_id",HCPCS_proc_cols2,ICD_procedure_cols2)]
all_proc_df2[,HCPCS_proc_cols] <- NA  #add a column so medcaid and medicare are consisdent
colnames(all_proc_df1)
colnames(all_proc_df2)
match(colnames(all_proc_df1),colnames(all_proc_df2))
colnames(all_proc_df1)[match(colnames(all_proc_df1),colnames(all_proc_df2))]
colnames(all_proc_df2)[match(colnames(all_proc_df1),colnames(all_proc_df2))]
all_proc_df2 <- all_proc_df2[, match(colnames(all_proc_df1),colnames(all_proc_df2))] #reorder
colnames(all_proc_df2)
colnames(all_proc_df1)
#Comb
all_proc_df <- rbind(all_proc_df1,all_proc_df2)
View(all_proc_df2)
View(all_proc_df)
colnames(all_proc_df)
data_hasCode <- all_proc_df[which(all_proc_df[,2:ncol(all_proc_df)] == "00179"),]
View(data_hasCode)
unique_code_df <- unique_proc_df
claim_code_df <- all_proc_df
unique_codes <- unique_code_df[,"CODE"]
total_pts <- unique(claim_code_df$study_id)
total_pts
length(total_pts)
View(unique_proc_df)
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Get drung names
drug_name_df <- read.csv(paste0(grping_data_dir,"Testing data for UH3 - Dec 16 2020/DrugList.csv"),stringsAsFactors = F,header = F)
drug_name_df$V1 <- as.character(drug_name_df$V1)
#2. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
#3. Load Chuback Groups file:
Chuback_df <- load_and_clean_Chuback_data(grping_data_dir)
Chuback_Diag_df <- Chuback_df[which(Chuback_df$Code.type %in% c("ICD-9 diagnosis")),]
Chuback_Proc_df <- Chuback_df[which(Chuback_df$Code.type %in% c("HCPC","ICD-9 procedure","CPT", "CPT category II","CPT category III")),]
#4. load Ritzwoller file:
Ritzwoller_df <- load_and_clean_Ritzwoller_data(grping_data_dir)
Ritzwoller_Diag_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Diagnostic"),] #48
Ritzwoller_Proc_df <- Ritzwoller_df[which(Ritzwoller_df$D_or_P == "Procedure"),] #1008
#5.Load drug group
DM3_df <- load_and_clean_DM3_data(grping_data_dir)
################################################################################
#1. Load unique codes data
################################################################################
unique_diag_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Diag_Codes.xlsx"),sheet = 1)
unique_proc_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Proc_Codes.xlsx"),sheet = 1)
unique_drug_df <- read.xlsx(paste0(code_data_dir,"0_Cleaned_Unique_Drug_Codes.xlsx"),sheet = 1)
#Add drug name to unique drug df
drug_name_df <- drug_name_df[which(drug_name_df$V1 %in% unique_drug_df$CODE),] #Filter out durg name df for code in claims
unique_drug_df$Drug_name <- NA
for (i in 1:nrow(unique_drug_df)){
if (i %% 1000 == 0 ){print(i)}
curr_drug <- unique_drug_df[i,"CODE"]
curr_idxes <- which(drug_name_df$V1 == curr_drug)
if (length(curr_idxes) > 0){
unique_drug_df[i,"Drug_name"] <- drug_name_df[curr_idxes,2]
}
}
#Clean drug names
unique_drug_df[,"Drug_name"] <- gsub("[[:punct:]]"," ",unique_drug_df[,"Drug_name"])
unique_drug_df[,"Drug_name"] <- trimws(unique_drug_df[,"Drug_name"], which = c("both"), whitespace = "[ \t\r\n]")
################################################################################
#3. Code grouping
################################################################################
#1. diagnose codes
grouped_unique_diag_df <- group_codes_into_CCS_func(unique_diag_df,CCS_Diag_df) #add CCS
#2. procedure codes
grouped_unique_proc_df <- group_codes_into_CCS_func(unique_proc_df,CCS_Proc_df) #add CCS
View(grouped_unique_proc_df)
View(unique_proc_df)
which(unique_proc_df$CODE==00)
which(unique_proc_df$CODE=="00")
source("Recapse_Ultility.R")
##### Functions for code processes
get_cleancode_onetype <- function(in_data,code_type, code_col){
# in_data   <- data_df1
# code_col <- ICD_diag_cols
#
#Read code columns
code_data      <-  in_data[,code_col]
#Get non-NA  and non-Blanks codes
non_na_or_blanks <- which(is.na(code_data) == F & code_data != "",arr.ind = T)
unique_code_list <- unique(code_data[non_na_or_blanks])
#Clean codes
unique_code_list <- clean_code_func(unique_code_list)  #Clean codes , may return NAs
non_na_or_blanks <- which(is.na(unique_code_list) == F & unique_code_list != "") #remove NA again
unique_code_list <- unique_code_list[non_na_or_blanks]
#Unique code list
codes_list_df     <-  data.frame(unique_code_list)
colnames(codes_list_df) <- "CODE"
codes_list_df$TYPE <- code_type
return(codes_list_df)
}
#######################################################################
##############              Data dir                     ##############
#######################################################################
data_dir <- "/recapse/data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/Testing data for UH3 - Dec 16 2020/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
#######################################################################
############################## Medicaid  ##############################
#######################################################################
#Data
data_df1 <- data.frame(fread(paste0(data_dir,"kcr_medicaid_healthclaims_fb0015.csv")))
data_df2 <- data.frame(fread(paste0(data_dir,"KCR_MEDICAID_PHARMCLAIMS_FB0015.csv")))
which(data_df1$CDE_PROC_PRIM=="00")
which(data_df1$CDE_PROC_PRIM==0)
which(data_df1$CDE_PROC_PRIM==00)
View(data_df1)
unique(data_df1$CDE_PROC_PRIM)
proc_ct <- read.xlsx("/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/Count/proc_count.xlsx",sheet = 1)
View(proc_ct)
which(is.na(proc_ct$CCS_CATEGORY)==T)
table(proc_ct$CCS_CATEGORY)
sum(table(proc_ct$CCS_CATEGORY))
length(which(is.na(proc_ct$CCS_CATEGORY)==T))
12815+3909
3954-46
12771-11586
3954 = 3930
3954 - 3930
3954 + 12771
source("Recapse_Ultility.R")
#######################################################################
##############              Data dir                     ##############
#######################################################################
code_data_dir <- "/recapse/intermediate_data/0_Codes/"
grping_data_dir <- "/recapse/data/"
outdir   <- "/recapse/intermediate_data/0_Codes/"
#local
code_data_dir <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
grping_data_dir <- "/Volumes/LJL_ExtPro/Data/ReCAPSE_Data/"
outdir   <- "/Users/lucasliu/Desktop/DrChen_Projects/ReCAPSE_Project/ReCAPSE_Intermediate_Data/0610_21/0_Codes/"
################################################################################
#1. Load grping data
################################################################################
#1. Get drung names
drug_name_df <- read.csv(paste0(grping_data_dir,"Testing data for UH3 - Dec 16 2020/DrugList.csv"),stringsAsFactors = F,header = F)
drug_name_df$V1 <- as.character(drug_name_df$V1)
#2. Load CCS Groups file:
CCS_df <- load_and_clean_CSS_data(grping_data_dir)
CCS_Diag_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Diag","ICD10_Diag")),]
CCS_Proc_df <- CCS_df[which(CCS_df[,"CODE_TYPE"] %in% c("ICD9_Proc","ICD10_Proc")),]
nrow(CCS_Proc_df)
View(CCS_Proc_df)
